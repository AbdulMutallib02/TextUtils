{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","cursor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acc1b529.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n        <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n         <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n       </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        aboutText: PropTypes.string.isRequired\r\n                  }\r\n\r\nNavbar.defaultProps = {\r\n      title: 'set title here',\r\n      aboutText: 'About Us'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n        <div className = \"container\" style={{color: props.mode===`dark`?`white`:`black`}}>\r\n            <h1>{props.heading}</h1>\r\n           <div className=\"mb-3\">\r\n             <textarea className=\"form-control\" value = {text} onChange ={handleOnChange} style={{backgroundColor: props.mode===`dark`?`grey`:`white`,color:props.mode===`dark`?`white`:`black`,\r\n            cursor:`pointer`}} id=\"myBox\" rows=\"8\"></textarea>\r\n           </div>\r\n           <button className=\"btn btn-primary mx-2\" onClick= {handleUpClick}>Convert to uppercase</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick= {handleLoClick}>Convert to lowercase</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick= {handleClearClick}>Clear text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode===`dark`?`white`:`black`}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} character</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word)=>{\r\n      const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n    return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong> {capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n         </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }\n  setTimeout(() => {\n    setAlert(null)\n  }, 1500);\n\n  const toggleMode = ()=>{\n    if (mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743'\n    showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\",\"success\");\n      }\n  }\n  return (\n    <>\n    {/* <Router> */}\n  <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n           <TextForm showAlert={showAlert} heading = \"Enter the text to analyse below\" mode={mode} />\n          {/* </Route> */}\n  {/* </Switch> */}\n  </div>\n  {/* </Router> */}\n\n  {/* <About/> */}\n  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}